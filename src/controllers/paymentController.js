// TODO: get public key and secrete keys from flutter wave dashboard
// TODO:  consider capturing the date on thr frontend when making payment
// MTN UGANDA MOBILE MONEY FLUTTER WAVE

const Flutterwave = require("flutterwave-node-v3");

const flw = new Flutterwave(PUBLIC_KEY, SECRET_KEY);

const ug_mobile_money = async () => {
  try {
    const payload = {
      tx_ref: "MC-1585230950508",
      amount: "1500",
      email: "olufemi@flw.com",
      phone_number: "054709929220",
      currency: "UGX",
      fullname: "Olufemi Obafunmiso",
      redirect_url: "https://rave-webhook.herokuapp.com/receivepayment",
      voucher: "128373", //This is the voucher code generated by the customer. It is meant to be passed in the initial charge request. (only for Vodafone cash)
      network: "MTN",
    };

    const response = await flw.MobileMoney.uganda(payload);
    console.log(response);
  } catch (error) {
    console.log(error);
  }
};

ug_mobile_money();
//Response
//   {
//     status: 'success',
//     message: 'Charge initiated',
//     meta: {
//       authorization: {
//         redirect: 'https://checkout.flutterwave.com/captcha/verify/1287327:4880b0705d15b949b84e056d7cf8b1dd',
//         mode: 'redirect'
//       }

//  CHARGES CARDS ON FLUTTER WAVE

const Flutterwave = require("flutterwave-node-v3");
const open = require("open");

// const flw = new Flutterwave("FLWPUBK-*************-X", "FLWSECK-********************-X");
const flw2 = new Flutterwave(
  "FLWPUBK-*************-X",
  "FLWSECK-********************-X"
);
const payload = {
  card_number: "5531886652142950",
  cvv: "564",
  expiry_month: "09",
  expiry_year: "21",
  currency: "NGN",
  amount: "100",
  redirect_url: "https://www.google.com",
  fullname: "Olufemi Obafunmiso",
  email: "olufemi@flw.com",
  phone_number: "0902620185",
  enckey: "611d0eda25a3c931863d92c4",
  tx_ref: "MC-32444ee--4eerye4euee3rerds4423e43e", // This is a unique reference, unique to the particular transaction being carried out. It is generated when it is not provided by the merchant for every transaction.
};

const chargeCard = async () => {
  try {
    const response = await flw.Charge.card(payload);
    console.log(response);
    if (response.meta.authorization.mode === "pin") {
      let payload2 = payload;
      payload2.authorization = {
        mode: "pin",
        fields: ["pin"],
        pin: 3310,
      };
      const reCallCharge = await flw2.Charge.card(payload2);

      const callValidate = await flw2.Charge.validate({
        otp: "12345",
        flw_ref: reCallCharge.data.flw_ref,
      });
      console.log(callValidate);
    }
    if (response.meta.authorization.mode === "redirect") {
      var url = response.meta.authorization.redirect;
      open(url);
    }

    console.log(response);
  } catch (error) {
    console.log(error);
  }
};

chargeCard();
